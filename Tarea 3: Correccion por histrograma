from matplotlib import pyplot as plt
from PIL import Image
import colorsys as cs
import numpy as np

#convertir a RGB
def YIQtoRGB(YIQ,wIm,hIm):
    RGB=np.zeros((wIm,hIm,3),dtype=np.float64)
    RGBnorm=np.zeros((wIm,hIm,3),dtype=np.float64)
    for x in range(wIm):
        for y in range(hIm):
            RGBnorm[x,y]=cs.yiq_to_rgb(YIQ[x,y,0],YIQ[x,y,1],YIQ[x,y,2])
            rgb=[]
            for i in range(3):
                rgb.append(int(RGBnorm[x,y,i]*255))
                
            RGB[x,y]=rgb
    return RGB

#Convertir a YIQ
def RGBtoYIQ(im,wIm,hIm):
    YIQ = np.zeros((wIm,hIm,3),dtype=np.float64)
    #convertir a YIQ
    for x in range(wIm):
        for y in range(hIm):
            RGBnorm=[]
            for i in range(3):
                RGBnorm.append(im[x,y][i]/255)
            YIQ[x,y]=cs.rgb_to_yiq(RGBnorm[0],RGBnorm[1],RGBnorm[2])
    return YIQ

def histoSetup(histoRes):   #armo la lista (de tamaño histoRes) donde almaceno la frecuencia
    histo=[]
    X=[]
    for i in range(histoRes):
        X.append((i+1)/histoRes)
        histo.append(0)
    return X,histo

def printHisto(px, histo, histoRes, plot):
    histon=[i/px for i in histo]
    plt.subplot(2,2,plot)
    plt.bar(X, histon,-1/histoRes,align='edge') 
    plt.xticks(np.arange(0,1,step=0.1))
    plt.xlim(0,1)
    plt.xlabel('Luminancia Y')
    plt.ylabel('Frecuencia relativa (%)')

im="original.png"
Imagen1=Image.open(im)
Imagen1=Imagen1.convert('RGB')
imagen=np.array(Imagen1)
 

plt.subplot(2,2,3)
plt.imshow(imagen)
width, height, d = np.shape(imagen)
px = width*height
histoRes=10 #Resolución del histrograma en xlim=[0,1]
    
#   Original
X, histo = histoSetup(histoRes) 
YIQ=RGBtoYIQ(imagen, width, height)

for x in range(width):
    for y in range(height):
        i=int((np.floor(YIQ[x,y,0] * histoRes)))
        histo[i]+=1
try:
    histo[histoRes-1]+=histo[histoRes]
    histo=histo[:histoRes]

except:
    None
    
plot=1
printHisto(px, histo, histoRes, plot)

#   Histograma modifcado
X, histo = histoSetup(histoRes)
YIQnew=YIQ
for x in range(width):
    for y in range(height):
        YIQnew[x,y,0]=np.sqrt(YIQ[x,y,0]) #    Correccion al histograma
        i=int((np.floor(YIQnew[x,y,0] * histoRes)))
        histo[i]+=1
try:
    histo[histoRes-1]+=histo[histoRes]
    histo=histo[:histoRes]

except:
    None

plot=2
printHisto(px, histo, histoRes, plot)
RGBnew=YIQtoRGB(YIQnew,width,height).astype("uint8")
plt.subplot(2,2,4)
plt.imshow(RGBnew)
plt.imsave("Correccion por histo - "+im, RGBnew)
