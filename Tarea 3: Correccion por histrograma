from matplotlib import pyplot as plt
from PIL import Image
import colorsys as cs
import numpy as np

imagen = Image.open('C:/Users/fisch/Desktop/montaje.png')
foto = imagen.load()

width, height = imagen.size
px = width*height
histoRes=10 #ResoluciÃ³n del histrograma en xlim=[0,1]

def histoSetup(histoRes):
    histo=[]
    X=[]
    for i in range(histoRes):
        X.append((i+1)/histoRes)
        histo.append(0)
    return X,histo

def printHisto(px, histo, histoRes, plot):
    histon=[i/px for i in histo]
    plt.subplot(2,1,plot)
    plt.bar(X, histon,-1/histoRes,align='edge') 
    plt.xticks(np.arange(0,1,step=0.1))
    plt.xlim(0,1)
    plt.xlabel('Luminancia Y')
    plt.ylabel('Frecuencia relativa (%)')
 
    
#   Original
X, histo = histoSetup(histoRes)
for x in range(width):
    for y in range(height):
        RGBnorm=[]
        for i in range(3):
            RGBnorm.append(foto[x,y][i]/255)
        YIQ=cs.rgb_to_yiq(RGBnorm[0],RGBnorm[1],RGBnorm[2])
        
        for i in range(histoRes):
            if (YIQ[0] >= X[i]-1/histoRes) and (YIQ[0] < X[i]):
                histo[i]=histo[i]+1
plot=1
printHisto(px, histo, histoRes, plot)
imagen.show()

#   Histograma modifcado
X, histo = histoSetup(histoRes)
for x in range(width):
    for y in range(height):
        RGBnorm=[]
        for i in range(3):
            RGBnorm.append(foto[x,y][i]/255)
        YIQ=cs.rgb_to_yiq(RGBnorm[0],RGBnorm[1],RGBnorm[2])
        
        YIQnew=np.sqrt(YIQ[0]) #    Correccion al histograma
        
        for i in range(histoRes):
            if (YIQnew >= X[i]-1/histoRes) and (YIQnew < X[i]):
                histo[i]=histo[i]+1
plot=2
printHisto(px, histo, histoRes, plot)
imagen.show()
